@page "/login"

@using Feedback.Shared;
@using System.Text.Json;
@using System.Text;

@inject Feedback.Site.Abstractions.ILocalStorageService localStorage;
@inject HttpClient httpClient;

<EditForm Model="LoginRequest" OnSubmit="OnSubmit">
    <InputText @bind-Value="LoginRequest.Login"></InputText>
    <InputText @bind-Value="LoginRequest.Password"></InputText>
    <button type="submit">Submit</button>
</EditForm>

<p>@Message</p>

@code {
    private LoginRequest LoginRequest = new();

    public string? Message;

    // private async void OnSubmit()
    // {
    //     string url = "https://localhost:44310/api/Auth/login";

    //     var response = await httpClient.PostAsJsonAsync<LoginRequest>(url, new() { Login = LoginRequest.Login, Password = LoginRequest.Password });

    //     if (response.IsSuccessStatusCode)
    //     {
    //         Message = await response.Content.ReadAsStringAsync();
    //     }
    //     else
    //     {
    //         Message = "NO";
    //     }
    // }
    private async void OnSubmit()
    {
        string url = "/api/Auth/login";

        // var request = new HttpRequestMessage(HttpMethod.Post, url);
        // request.Content = new StringContent(JsonSerializer.Serialize(LoginRequest), Encoding.UTF8, "application/json");
        // var s = httpClient.Send(request);
        // var a = await s.Content.ReadAsStringAsync();

        var response = await httpClient.PostAsJsonAsync<LoginRequest>(url, new() { Login = LoginRequest.Login, Password = LoginRequest.Password });

        if (response.IsSuccessStatusCode)
        {
            string accessToken = await response.Content.ReadAsStringAsync();
            await localStorage.SetItem<string>(Constants.AuthLocalStorage, "Bearer" + accessToken);
        }
        else
        {
            Message = await response.Content.ReadAsStringAsync();
        }
    }
}
